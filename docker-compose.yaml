version: "3.9"
services:
  ingester:
    container_name: ingester
    restart: always
    entrypoint: sh -c "if [ -z '${MALLOC_CONF}' ]; then exec ./ingester --rocks-slots-db-path $$ROCKS_SLOTS_DB_PATH --rocks-secondary-slots-db-path $$ROCKS_SECONDARY_SLOTS_DB_PATH; else exec ./profiling_ingester --rocks-slots-db-path $$ROCKS_SLOTS_DB_PATH --rocks-secondary-slots-db-path $$ROCKS_SECONDARY_SLOTS_DB_PATH; fi"
    env_file:
      - .env
    network_mode: host
    volumes:
      - ${ROCKS_DB_PATH}:${ROCKS_DB_PATH_CONTAINER}:rw
      - ${ROCKS_DUMP_PATH:-/tmp/rocks_dump}:${ROCKS_DUMP_PATH:-/tmp/rocks_dump}:rw
      - ${ROCKS_BACKUP_DIR}:${ROCKS_BACKUP_DIR}:rw
      - ${ROCKS_BACKUP_ARCHIVES_DIR}:${ROCKS_BACKUP_ARCHIVES_DIR}:rw
      - ${PROFILING_FILE_PATH}:${PROFILING_FILE_PATH_CONTAINER}:rw
      - ${FILE_STORAGE_PATH}:${FILE_STORAGE_PATH_CONTAINER}:rw
      - ${ROCKS_MIGRATION_STORAGE_PATH}:${ROCKS_MIGRATION_STORAGE_PATH}:rw
      - ${ROCKS_SLOTS_DB_PATH}:${ROCKS_SLOTS_DB_PATH}:ro
      - ${ROCKS_SECONDARY_SLOTS_DB_PATH}:${ROCKS_SECONDARY_SLOTS_DB_PATH}:rw
      - ./creds.json:/usr/src/app/creds.json
      - ./migrations:/usr/src/app/migrations
      - ./arweave_wallet.json:/usr/src/app/arweave_wallet.json
      - ./heaps:/usr/src/app/heaps:rw
    depends_on:
      - db
    build:
      context: .
      dockerfile: ingester.Dockerfile
    stop_grace_period: 10m
    logging:
      options:
        max-size: "2048m"

  das-api:
    container_name: das-api
    restart: always
    entrypoint: sh -c "if [ -z '${MALLOC_CONF}' ]; then exec ./api; else exec ./profiling_api; fi"
    env_file:
      - .env
    network_mode: host
    volumes:
      - ${ROCKS_DB_PATH_CONTAINER}:${ROCKS_DB_PATH_CONTAINER}:ro
      - ${ROCKS_DB_SECONDARY_PATH_CONTAINER}/api:${ROCKS_DB_SECONDARY_PATH_CONTAINER}:rw
      - ${ROCKS_ARCHIVES_DIR}:${ROCKS_ARCHIVES_DIR}:ro
      - ${FILE_STORAGE_PATH}:${FILE_STORAGE_PATH_CONTAINER}:rw
      - ./heaps:/usr/src/app/heaps:rw
    depends_on:
      - db
    build:
      context: .
      dockerfile: ingester.Dockerfile
    stop_grace_period: 2m
    logging:
      options:
        max-size: "2048m"

  synchronizer:
    container_name: synchronizer
    restart: always
    entrypoint: sh -c "if [ -z '${MALLOC_CONF}' ]; then exec ./synchronizer; else exec ./profiling_synchronizer; fi"
    env_file:
      - .env
    network_mode: host
    volumes:
      - ${ROCKS_DB_PATH}:${ROCKS_DB_PATH_CONTAINER}:rw
      - ${ROCKS_DUMP_PATH:-/tmp/rocks_dump}:${ROCKS_DUMP_PATH:-/tmp/rocks_dump}:rw
      - ${ROCKS_DB_SECONDARY_PATH_CONTAINER}/synchronizer:${ROCKS_DB_SECONDARY_PATH_CONTAINER}:rw
      - ./heaps:/usr/src/app/heaps:rw
      - ./migrations:/usr/src/app/migrations
    depends_on:
      - db
    build:
      context: .
      dockerfile: ingester.Dockerfile
    stop_grace_period: 5m
    logging:
      options:
        max-size: "2048m"

  integrity-verification:
    container_name: integrity-verification
    restart: always
    entrypoint: "./integrity-verification"
    env_file:
      - .env
    network_mode: host
    volumes:
      - ./creds.json:/usr/src/app/creds.json
      - ${INTEGRITY_VERIFICATION_TEST_FILE_PATH}:${INTEGRITY_VERIFICATION_TEST_FILE_PATH_CONTAINER}:rw
      - ${INTEGRITY_VERIFICATION_SLOTS_COLLECT_PATH}:${INTEGRITY_VERIFICATION_SLOTS_COLLECT_PATH_CONTAINER}:rw
    depends_on:
      - db
    build:
      context: .
      dockerfile: integrity_verification.Dockerfile
    logging:
      options:
        max-size: "2048m"

  backfill:
    container_name: backfill
    restart: no
    entrypoint: ./backfill
    env_file:
      - .env
    environment:
      SOURCE_SLOTS_DB_PATH: ${ROCKS_SLOTS_DB_PATH}
      TARGET_MAIN_DB_PATH: ${ROCKS_DB_PATH}
    network_mode: host
    volumes:
      - ${ROCKS_DB_PATH}:${ROCKS_DB_PATH}:rw
      - ${ROCKS_SLOTS_DB_PATH}:${ROCKS_SLOTS_DB_PATH}:ro
    stop_grace_period: 5m
    build:
      context: .
      dockerfile: ingester.Dockerfile
    logging:
      options:
        max-size: "2048m"

  slot-persister:
    container_name: slot-persister
    restart: always
    entrypoint: >
      sh -c "if [ -f /usr/src/app/creds.json ]; then
        export BIG_TABLE_CREDENTIALS=/usr/src/app/creds.json;
      fi;
      exec ./slot_persister"
    env_file:
      - .env
    environment:
      SLOTS_DB_PRIMARY_PATH: ${ROCKS_SLOTS_DB_PATH}
      # BIG_TABLE_CREDENTIALS: /usr/src/app/creds.json # refactored this to account for the file doesn't exist case
      METRICS_PORT: 9090
    network_mode: host
    volumes:
      - ${ROCKS_SLOTS_DB_PATH}:${ROCKS_SLOTS_DB_PATH}:rw
      - ./creds.json:/usr/src/app/creds.json
    stop_grace_period: 5m
    build:
      context: .
      dockerfile: ingester.Dockerfile
    logging:
      options:
        max-size: "2048m"

  db:
    container_name: db
    image: 'postgres:14'
    command: [ "postgres", "-c", "log_statement=none", "-c", "log_destination=stderr" ,"-c","max_connections=2000", "-c", "max_parallel_workers=32", "-c", "max_parallel_workers_per_gather=24", "-c", "max_parallel_maintenance_workers=8", "-c", "shared_buffers=30GB", "-c", "effective_cache_size=55GB", "-c", "work_mem=1GB", "-c", "max_wal_size=20GB" ]
    shm_size: 1g
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: solana # The PostgreSQL user (useful to connect to the database)
      POSTGRES_PASSWORD: solana # The PostgreSQL password (useful to connect to the database)
      POSTGRES_DB: solana
    volumes:
      - ${POSTGRE_DB_PATH:-./db-data}:/var/lib/postgresql/data/:rw
      - ${ROCKS_DUMP_PATH:-/tmp/rocks_dump}:${ROCKS_DUMP_PATH:-/tmp/rocks_dump}:ro
    logging:
      options:
        max-size: "100m"

  rocksdb-backup:
    container_name: rocksdb-backup
    entrypoint: ./rocksdb_backup
    env_file:
      - .env
    network_mode: host
    volumes:
      - ${ROCKS_DB_PATH}:${ROCKS_DB_PATH_CONTAINER}:ro
      - ${ROCKS_BACKUP_DIR}:${ROCKS_BACKUP_DIR}:rw
      - ${ROCKS_BACKUP_ARCHIVES_DIR}:${ROCKS_BACKUP_ARCHIVES_DIR}:rw
      - ${ROCKS_DB_SECONDARY_PATH}:${ROCKS_DB_SECONDARY_PATH_CONTAINER}:rw
      - ./heaps:/usr/src/app/heaps:rw
    build:
      context: .
      dockerfile: ingester.Dockerfile
    stop_grace_period: 2m
    logging:
      options:
        max-size: "100m"
